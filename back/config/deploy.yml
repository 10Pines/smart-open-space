service: smart-open-space-back

image: cassa97/smart-open-space-back

ssh:
  user: jocas97

# Deploy to these servers.
servers:
  web:
    - 192.168.1.74

proxy:
  ssl: false
  app_port: 8081
  healthcheck:
    path: /ping

registry:
  username:
    - KAMAL_REGISTRY_USERNAME
  password:
    - KAMAL_REGISTRY_PASSWORD


builder:
  arch: amd64

env:
  clear:
    SPRING_PROFILE: kamal
    LOG_LEVEL: INFO
    APP_PORT: 8081
    JDBC_DATABASE_URL: jdbc:postgresql://db/sos
    FRONTEND_URL: http://192.168.184.124
    MAIL_SENDER: smartopenspace@10pines.com
    CORS_ALLOWED_ORIGINS: http://localhost:1234,http://localhost,http://192.168.184.124,https://smartopenspace.herokuapp.com,https://smartopenspace.10pines.com
    CORS_ALLOWED_SOCKET_ORIGINS: http://localhost:1234,http://localhost,http://192.168.184.124,https://smartopenspace.herokuapp.com,https://openspaces.10pines.com,https://smartopenspace-10pines.herokuapp.com,https://smartopenspace.10pines.com
  secret:
    - JDBC_DATABASE_USERNAME
    - JDBC_DATABASE_PASSWORD
    - MAILGUN_SMTP_SERVER
    - MAILGUN_SMTP_PORT
    - MAILGUN_SMTP_LOGIN
    - MAILGUN_SMTP_PASSWORD
    - JWT_SECRET
    - JWT_EXPIRATION_IN_MINUTES
    - PURGE_PASSWORD

# Use accessory services (secrets come from .kamal/secrets).
accessories:
    db:
      service: db
      image: postgres:15.0-alpine
      host: 192.168.1.74
      port: "127.0.0.1:6543:5432"
      env:
        clear:
          PGDATA: "/var/lib/postgresql/data"
          POSTGRES_DB: sos
        secret:
          - POSTGRES_USER
          - POSTGRES_PASSWORD
      volumes:
        - sos-db-data:/var/lib/postgresql/data
